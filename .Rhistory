pal <- colorNumeric(palette = "Greens", domain = neighborhoods@data$pop_density, alpha = 0.5)
leaflet() %>%
# Basemaps
addTiles(group = "WorldTopoMap") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("Stamen.Toner", group = "Toner") %>%
# Layers control
addLayersControl(
baseGroups = c("WorldTopoMap", "GeoWorldMap", "Toner"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
#addPolygons(data = neighborhoods, color = "green", fill = FALSE) %>%
addPolygons(data = neighborhoods,
color = pal(neighborhoods@data$pop_density),
popup = paste0("<b>", neighborhoods@data$Name, ":</b> ", neighborhoods@data$pop_density)) %>%
addLegend(position = "bottomright", pal = pal, values = neighborhoods@data$pop_density, title = "Population Density")
pal <- colorNumeric(palette = "Greens", domain = neighborhoods@data$pop_density, alpha = 0.7)
leaflet() %>%
# Basemaps
addTiles(group = "WorldTopoMap") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("Stamen.Toner", group = "Toner") %>%
# Layers control
addLayersControl(
baseGroups = c("WorldTopoMap", "GeoWorldMap", "Toner"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
#addPolygons(data = neighborhoods, color = "green", fill = FALSE) %>%
addPolygons(data = neighborhoods,
color = pal(neighborhoods@data$pop_density),
popup = paste0("<b>", neighborhoods@data$Name, ":</b> ", neighborhoods@data$pop_density)) %>%
addLegend(position = "bottomright", pal = pal, values = neighborhoods@data$pop_density, title = "Population Density")
pal <- colorNumeric(palette = "cm.colors", domain = neighborhoods@data$pop_density, alpha = 0.7)
?colorNumeric
?colors
pal <- colorNumeric(palette = "Blues", domain = neighborhoods@data$pop_density, alpha = 0.7)
leaflet() %>%
# Basemaps
addTiles(group = "WorldTopoMap") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("Stamen.Toner", group = "Toner") %>%
# Layers control
addLayersControl(
baseGroups = c("WorldTopoMap", "GeoWorldMap", "Toner"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
#addPolygons(data = neighborhoods, color = "green", fill = FALSE) %>%
addPolygons(data = neighborhoods,
color = pal(neighborhoods@data$pop_density),
popup = paste0("<b>", neighborhoods@data$Name, ":</b> ", neighborhoods@data$pop_density)) %>%
addLegend(position = "bottomright", pal = pal, values = neighborhoods@data$pop_density, title = "Population Density")
pal <- colorNumeric(palette = "Greens", domain = neighborhoods@data$pop_density, alpha = FALSE)
leaflet() %>%
# Basemaps
addTiles(group = "WorldTopoMap") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("Stamen.Toner", group = "Toner") %>%
# Layers control
addLayersControl(
baseGroups = c("WorldTopoMap", "GeoWorldMap", "Toner"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
#addPolygons(data = neighborhoods, color = "green", fill = FALSE) %>%
addPolygons(data = neighborhoods,
color = pal(neighborhoods@data$pop_density),
popup = paste0("<b>", neighborhoods@data$Name, ":</b> ", neighborhoods@data$pop_density)) %>%
addLegend(position = "bottomright", pal = pal, values = neighborhoods@data$pop_density, title = "Population Density")
pal <- colorNumeric(palette = "Greens", domain = neighborhoods@data$pop_density, alpha = TRUE)
leaflet() %>%
# Basemaps
addTiles(group = "WorldTopoMap") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("Stamen.Toner", group = "Toner") %>%
# Layers control
addLayersControl(
baseGroups = c("WorldTopoMap", "GeoWorldMap", "Toner"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
#addPolygons(data = neighborhoods, color = "green", fill = FALSE) %>%
addPolygons(data = neighborhoods,
color = pal(neighborhoods@data$pop_density),
popup = paste0("<b>", neighborhoods@data$Name, ":</b> ", neighborhoods@data$pop_density)) %>%
addLegend(position = "bottomright", pal = pal, values = neighborhoods@data$pop_density, title = "Population Density")
boston311 <- read.csv("./boston_311_service_requests.csv", header = TRUE, sep = ',', stringsAsFactors = FALSE)
#importing boston 311 data
setwd("C:/Users/nikit/Documents/git/hw3-nikitas")
boston311 <- read.csv("./boston_311_service_requests.csv", header = TRUE, sep = ',', stringsAsFactors = FALSE)
View(boston311)
boston311 %>% filter(TYPE == "Water Issues" | TYPE == "Pothole" | TYPE == "Sidewalk Cover / Manhole")
subset_bos311 <- boston311 %>% filter(TYPE == "Water Issues" | TYPE == "Pothole" | TYPE == "Sidewalk Cover / Manhole")
View(subset_bos311)
subset_bos311 <- boston311 %>% filter(TYPE == "Water Issues" & TYPE == "Pothole" & TYPE == "Sidewalk Cover / Manhole")
subset_bos311 <- boston311 %>% filter(TYPE == c("Water Issues", "Pothole", "Sidewalk Cover / Manhole"))
subset_bos311 <- boston311[boston311$TYPE == c("Water Issues", "Pothole", "Sidewalk Cover / Manhole"),]
?subset
subset_bos311 <- boston311 %>%
subset(TYPE, c("Water Issues", "Pothole", "Sidewalk Cover / Manhole"))
subset_bos311 <- boston311 %>%
subset(TYPE, select = c("Water Issues", "Pothole", "Sidewalk Cover / Manhole"))
subset_bos311 <- boston311 %>% filter(TYPE %in% c("Water Issues", "Pothole", "Sidewalk Cover / Manhole"))
unique(subset_bos311$TYPE)
subset_bos311 <- boston311 %>% filter(REASON %in% c("Water Issues", "Pothole", "Sidewalk Cover / Manhole"))
unique(subset_bos311$TYPE)
unique(subset_bos311$REASON)
write.csv(subset_bos311, "Boston311_Subset.csv", row.names = FALSE)
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
# Custom Palette
pal311 <- colorFactor(c("Red", "Green"), c("Closed", "Open"))
leaflet() %>%
# Basemaps
addTiles(group = "WorldTopoMap") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("Stamen.Toner", group = "Toner") %>%
# Layers control
addLayersControl(
baseGroups = c("WorldTopoMap", "GeoWorldMap", "Toner"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
potholes <- read.csv("311_potholes.csv")
leaflet() %>%
# Basemaps
addTiles(group = "WorldTopoMap") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("Stamen.Toner", group = "Toner") %>%
# Layers control
addLayersControl(
baseGroups = c("WorldTopoMap", "GeoWorldMap", "Toner"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.5, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
leaflet() %>%
# Basemaps
addTiles("OpenStreetMap.HOT", group = "OpenStreetMap") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("WorldTopoMap", "GeoWorldMap", "Toner"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.5, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
leaflet() %>%
# Basemaps
addTiles("OpenStreetMap.HOT", group = "OpenStreetMap") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.5, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
leaflet() %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.5, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
subset_bos311 <- boston311 %>% filter(REASON %in% c("Water Issues"))
subset_bos311 <- boston311 %>% filter(REASON %in% c("Water Issues", "Fire Hydrant"))
write.csv(subset_bos311, "Boston311_Subset.csv", row.names = FALSE)
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
leaflet() %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.5, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
leaflet() %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
subset_bos311 <- boston311 %>% filter(REASON %in% c("Water Issues"))
write.csv(subset_bos311, "Boston311_Subset.csv", row.names = FALSE)
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
leaflet() %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
leaflet() %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.5, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
df <- boston311 %>% group_by(REASON) %>% summarise(count = n()) %>% arrange(count)
View(df)
subset_bos311 <- boston311 %>% filter(REASON %in% c("Sanitation"))
write.csv(subset_bos311, "Boston311_Subset.csv", row.names = FALSE)
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
bos_sample <- bos_311_subset %>% n_sample(1000)
bos_sample <- bos_311_subset %>% sample_n(1000)
leaflet() %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_sample, lng = ~Longitude, lat = ~Latitude, radius = 1.5, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_sample$CASE_STATUS, title = "Case Status")
subset_bos311 <- boston311 %>% filter(REASON %in% c("Sidewalk Cover / Manhole"))
write.csv(subset_bos311, "Boston311_Subset.csv", row.names = FALSE)
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
leaflet() %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.2, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
leaflet() %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.2, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
# Custom Palette
pal311 <- colorFactor(c("#7F0B0B", "#185734"), c("Closed", "Open"))
# Custom Palette
pal311 <- colorFactor(c("#7F0B0B", "#185734"), c("Closed", "Open"))
leaflet() %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.2, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
# Custom Palette
pal311 <- colorFactor(c("Red", "Green"), c("Closed", "Open"))
leaflet() %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addPolylines(data = hydro_line) %>%
addPolygons(data = neighborhoods, color = "Green", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.2, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "topright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Case Status")
View(polling_locations)
early_vote_locations <- readOGR("./Early_Voting_Locations.shp", layer = "Early_Voting_Locations")
View(early_vote_locations)
library(rgdal)
library(leaflet)
library(leaflet.extras)
library(dplyr)
library(readxl)
library(stringr)
library(raster)
#importing neighborhoods,  and hydrography data
neighborhoods <- readOGR("./Boston_Neighborhoods.geojson")
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
early_vote_locations <- readOGR("./Early_Voting_Locations.shp", layer = "Early_Voting_Locations")
hydro_line <- readOGR("./Hydrography_Line.shp", layer = "Hydrography_Line", GDAL1_integer64_policy = TRUE)
# Customized Palette
pal311 <- colorFactor(c("red", "green"), c("Closed", "Open"))
leaflet() %>%
setView(lng = -71.1241028, lat = 42.315407, zoom = 12) %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
# Adding polylines, polygons, points and legend
addPolylines(data = hydro_line, color = "blue") %>%
addPolygons(data = neighborhoods, color = "darkgreen", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.2, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "bottomright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Manhole Status") %>%
addAwesomeMarkers(data = early_vote_locations,
lng = ~MatchLongi, lat = ~MatchLatit,
icon = makeAwesomeIcon(icon = "check", library = "fa", markerColor = "lightgray"), popup = ~Neighborho)
library(rgdal)
library(leaflet)
library(leaflet.extras)
library(dplyr)
library(readxl)
library(stringr)
library(raster)
#importing neighborhoods,  and hydrography data
neighborhoods <- readOGR("./Boston_Neighborhoods.geojson")
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
early_vote_locations <- readOGR("./Early_Voting_Locations.shp", layer = "Early_Voting_Locations")
hydro_line <- readOGR("./Hydrography_Line.shp", layer = "Hydrography_Line", GDAL1_integer64_policy = TRUE)
# Customized Palette
pal311 <- colorFactor(c("red", "green"), c("Closed", "Open"))
leaflet() %>%
setView(lng = -71.1241028, lat = 42.315407, zoom = 12) %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
# Adding polylines, polygons, points and legend
addPolylines(data = hydro_line, color = "blue") %>%
addPolygons(data = neighborhoods, color = "darkgreen", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.2, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "bottomright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Manhole Status") %>%
addAwesomeMarkers(data = early_vote_locations,
lng = ~MatchLongi, lat = ~MatchLatit,
icon = makeAwesomeIcon(icon = "check", library = "fa", markerColor = "lightgray"), popup = ~Neighborho)
library(rgdal)
library(leaflet)
library(leaflet.extras)
library(dplyr)
library(readxl)
library(stringr)
library(raster)
#importing neighborhoods,  and hydrography data
neighborhoods <- readOGR("./Boston_Neighborhoods.geojson")
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
early_vote_locations <- readOGR("./Early_Voting_Locations.shp", layer = "Early_Voting_Locations")
early_vote_locations <- readOGR(".Early_Voting_Locations/Early_Voting_Locations.shp", layer = "Early_Voting_Locations")
early_vote_locations <- readOGR("./Early_Voting_Locations/Early_Voting_Locations.shp", layer = "Early_Voting_Locations")
early_vote_locations <- readOGR("./Early_Voting_Locations/Early_Voting_Locations.shp", layer = "Early_Voting_Locations")
hydro_line <- readOGR("./Hydrography_Line/Hydrography_Line.shp", layer = "Hydrography_Line", GDAL1_integer64_policy = TRUE)
#importing neighborhoods,  and hydrography data
neighborhoods <- readOGR("./Boston_Neighborhoods.geojson")
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
early_vote_locations <- readOGR("./Early_Voting_Locations/Early_Voting_Locations.shp", layer = "Early_Voting_Locations")
hydro_line <- readOGR("./Hydrography_Line/Hydrography_Line.shp", layer = "Hydrography_Line", GDAL1_integer64_policy = TRUE)
#importing neighborhoods,  and hydrography data
neighborhoods <- readOGR("./Boston_Neighborhoods.geojson")
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
early_vote_locations <- readOGR("./Early_Voting_Locations/Early_Voting_Locations.shp", layer = "Early_Voting_Locations")
hydro_line <- readOGR("./Hydrography_Line/Hydrography_Line.shp", layer = "Hydrography_Line", GDAL1_integer64_policy = TRUE)
# Customized Palette
pal311 <- colorFactor(c("red", "green"), c("Closed", "Open"))
leaflet() %>%
setView(lng = -71.1241028, lat = 42.315407, zoom = 12) %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
# Adding polylines, polygons, points and legend
addPolylines(data = hydro_line, color = "blue") %>%
addPolygons(data = neighborhoods, color = "darkgreen", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.2, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "bottomright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Manhole Status") %>%
addAwesomeMarkers(data = early_vote_locations,
lng = ~MatchLongi, lat = ~MatchLatit,
icon = makeAwesomeIcon(icon = "check", library = "fa", markerColor = "lightgray"), popup = ~Neighborho)
library(rgdal)
library(leaflet)
library(leaflet.extras)
library(dplyr)
library(readxl)
library(stringr)
library(raster)
#importing neighborhoods,  and hydrography data
neighborhoods <- readOGR("./Boston_Neighborhoods.geojson")
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
early_vote_locations <- readOGR("./Early_Voting_Locations/Early_Voting_Locations.shp", layer = "Early_Voting_Locations")
hydro_line <- readOGR("./Hydrography_Line/Hydrography_Line.shp", layer = "Hydrography_Line", GDAL1_integer64_policy = TRUE)
# Customized Palette
pal311 <- colorFactor(c("red", "green"), c("Closed", "Open"))
leaflet() %>%
setView(lng = -71.1241028, lat = 42.315407, zoom = 12) %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
# Adding polylines, polygons, points and legend
addPolylines(data = hydro_line, color = "blue") %>%
addPolygons(data = neighborhoods, color = "darkgreen", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.2, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "bottomright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Manhole Status") %>%
addAwesomeMarkers(data = early_vote_locations,
lng = ~MatchLongi, lat = ~MatchLatit,
icon = makeAwesomeIcon(icon = "check", library = "fa", markerColor = "lightgray"), popup = ~Neighborho)
library(rgdal)
library(leaflet)
library(leaflet.extras)
library(dplyr)
library(readxl)
library(stringr)
library(raster)
#importing neighborhoods,  and hydrography data
neighborhoods <- readOGR("./Boston_Neighborhoods.geojson")
bos_311_subset <- read.csv("./Boston311_Subset.csv", header = TRUE, sep = ',')
early_vote_locations <- readOGR("./Early_Voting_Locations/Early_Voting_Locations.shp", layer = "Early_Voting_Locations")
hydro_line <- readOGR("./Hydrography_Line/Hydrography_Line.shp", layer = "Hydrography_Line", GDAL1_integer64_policy = TRUE)
# Customized Palette
pal311 <- colorFactor(c("red", "green"), c("Closed", "Open"))
leaflet() %>%
setView(lng = -71.1241028, lat = 42.315407, zoom = 12) %>%
# Basemaps
addTiles(group = "OpenStreetMap.HOT") %>%
addProviderTiles("Esri.NatGeoWorldMap", group = "GeoWorldMap") %>%
addProviderTiles("CartoDB.DarkMatter", group = "DarkMatter") %>%
# Layers control
addLayersControl(
baseGroups = c("OpenStreetMap", "GeoWorldMap", "DarkMatter"),
options = layersControlOptions(collapsed = FALSE)
) %>%
# Adding polylines, polygons, points and legend
addPolylines(data = hydro_line, color = "blue") %>%
addPolygons(data = neighborhoods, color = "darkgreen", fill = FALSE) %>%
addCircleMarkers(data = bos_311_subset, lng = ~Longitude, lat = ~Latitude, radius = 1.2, color = ~pal311(CASE_STATUS)) %>%
addLegend(position = "bottomright" , pal = pal311, values = bos_311_subset$CASE_STATUS, title = "Manhole Status") %>%
addAwesomeMarkers(data = early_vote_locations,
lng = ~MatchLongi, lat = ~MatchLatit,
icon = makeAwesomeIcon(icon = "check", library = "fa", markerColor = "lightgray"), popup = ~Neighborho)
